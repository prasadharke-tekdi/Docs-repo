"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[7454],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=u(r),g=a,m=s["".concat(p,".").concat(g)]||s[g]||d[g]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},3850:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={},i=void 0,l={unversionedId:"Learning/Gitlab Upgradation",id:"Learning/Gitlab Upgradation",title:"Gitlab Upgradation",description:"Upgrading the major version requires more attention. Backward-incompatible changes are reserved for major versions.",source:"@site/docs/Learning/Gitlab Upgradation.md",sourceDirName:"Learning",slug:"/Learning/Gitlab Upgradation",permalink:"/docs/Learning/Gitlab Upgradation",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker CLI Commands",permalink:"/docs/Learning/Docker CLI Commands"},next:{title:"Grafana Installation and Dashboard Setup",permalink:"/docs/Learning/Grafana"}},p={},u=[],c={toc:u},s="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Upgrading the major version requires more attention. Backward-incompatible changes are reserved for major versions.\nA major upgrade requires the following steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Take the backup of your gitlab server to prevent any loss of your important data.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Start by identifying a supported upgrade path. This is essential for a successful major version upgrade.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Upgrade to the latest minor version of the preceding major version.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Upgrade to the \u201cdot zero\u201d release of the next major version (X.0.Z)."))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Step 1"),":"),(0,a.kt)("p",null,"Create backup of  gitlab server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Sudo gitlab-backup create\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Step 2"),":"),(0,a.kt)("p",null,"Then go through the link to get the upgrade path ",(0,a.kt)("a",{parentName:"p",href:"https://gitlab-com.gitlab.io/support/toolbox/upgrade-path/"},"https://gitlab-com.gitlab.io/support/toolbox/upgrade-path/"),"\nand fill the required details like,  current version and edition of your gitlab then required version. You will get a supported upgrade path overview. In which you will get the all version upgrade commands."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Step 3"),":"),(0,a.kt)("p",null,"After every installation do the reconfiguration of gitlab and check the data is up to date."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Sudo gitlab-ctl reconfigure \n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Step 4"),":"),(0,a.kt)("p",null,"On major version upgradation you might get below error of migration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'rails_migration[gitlab-rails] (gitlab::database_migrations line 51) had an error: Mixlib::ShellOut::ShellCommandFailed: bash[migrate gitlab-rails database] (/opt/gitlab/embedded/cookbooks/cache/cookbooks/gitlab/resources/rails_migration.rb line 16) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received \'1\'\n---- Begin output of "bash"  "/tmp/chef-script20230512-614-q0fzu8" ----\nSTDOUT: rake aborted!\nStandardError: An error has occurred, all later migrations canceled:\nExpected batched background migration for the given configuration to be marked as \'finished\', but it is \'active\':   {:job_class_name=>"CopyColumnUsingBackgroundMigrationJob", :table_name=>"taggings", :column_name=>"id", :job_arguments=>[["id", "taggable_id"], ["id_convert_to_bigint", "taggable_id_convert_to_bigint"]]}\n')),(0,a.kt)("p",null,"Then you have to finalize it manually by running "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'sudo gitlab-rake gitlab:background_migrations:finalize[CopyColumnUsingBackgroundMigrationJob,taggings,id,\'[["id"\\, "taggable_id"]\\, ["id_convert_to_bigint"\\, "taggable_id_convert_to_bigint"]]\']\n')),(0,a.kt)("p",null,"Before running the next command, wait for a few minutes to finalize it. Then run the next command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gititlab-rake db:migrate\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gitlab-ctl reconfigure\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Step 5"),":"),(0,a.kt)("p",null,"While upgrading you might get a migration error of  ",(0,a.kt)("inlineCode",{parentName:"p"},"oauth access token expire"),".\nThen follow the below steps one by one"),(0,a.kt)("p",null,"connect to gitlab postgres db:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo gitlab-psql\n\\l\n\\c gitlabhq_production\nUPDATE oauth_access_tokens SET expires_in = '7200' WHERE expires_in IS NULL;\n")),(0,a.kt)("p",null,"Then come out from postgresDB with"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"exit\n")),(0,a.kt)("p",null,"Run the final migrations:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo gitlab-rake db:migrate\n")),(0,a.kt)("p",null,"on the last do the reconfiguration and install next version."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo gitlab-ctl reconfigure\n")))}d.isMDXComponent=!0}}]);