"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[4614],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>k});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(t),d=o,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||i;return t?a.createElement(k,r(r({ref:n},m),{},{components:t})):a.createElement(k,r({ref:n},m))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9746:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(7462),o=(t(7294),t(3905));const i={},r=void 0,l={unversionedId:"Learning/Docker CLI Commands",id:"Learning/Docker CLI Commands",title:"Docker CLI Commands",description:"The docker CLI is the command-line tool used to interact with a Docker installation. You need it to start containers, build images, interact with the Docker resources on your machine, and manage configuration settings.",source:"@site/docs/Learning/Docker CLI Commands.md",sourceDirName:"Learning",slug:"/Learning/Docker CLI Commands",permalink:"/docs/Learning/Docker CLI Commands",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basic of  Docker",permalink:"/docs/Learning/Basic of  Docker"},next:{title:"Gitlab Upgradation",permalink:"/docs/Learning/Gitlab Upgradation"}},s={},p=[{value:"General Commands",id:"general-commands",level:2},{value:"Build Images",id:"build-images",level:2},{value:"Run Containers",id:"run-containers",level:2},{value:"Manage Containers",id:"manage-containers",level:2},{value:"Copy to and From Containers",id:"copy-to-and-from-containers",level:2},{value:"Execute Commands in Containers",id:"execute-commands-in-containers",level:2},{value:"Access Container Logs",id:"access-container-logs",level:2},{value:"View Container Resource Utilization",id:"view-container-resource-utilization",level:2},{value:"Manage Images",id:"manage-images",level:2},{value:"Pull and Push Images",id:"pull-and-push-images",level:2},{value:"Manage Networks",id:"manage-networks",level:2},{value:"Manage Volumes",id:"manage-volumes",level:2},{value:"Use Configuration Contexts",id:"use-configuration-contexts",level:2},{value:"Create SBOMs",id:"create-sboms",level:2},{value:"Scan for Vulnerabilities",id:"scan-for-vulnerabilities",level:2},{value:"Docker Hub Account",id:"docker-hub-account",level:2},{value:"Clean Up Unused Resources",id:"clean-up-unused-resources",level:2}],m={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The docker CLI is the command-line tool used to interact with a Docker installation. You need it to start containers, build images, interact with the Docker resources on your machine, and manage configuration settings."),(0,o.kt)("p",null,"Here\u2019s a quick table of contents:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#general-commands"},"General Commands")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#build-images"},"Build Images")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#run-containers"},"Run Containers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#manage-containers"},"Manage Containers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#copy-to-and-from-containers"},"Copy to and From Containers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#execute-commands-in-containers"},"Execute Commands in Containers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#access-container-logs"},"Access Container Logs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#view-container-resource-utilization"},"View Container Resource Utilization")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#manage-images"},"Manage Images")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#pull-and-push-images"},"Pull and Push Images")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#manage-networks"},"Manage Networks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#manage-volumes"},"Manage Volumes")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#use-configuration-contexts"},"Use Configuration Contexts")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#create-sboms"},"Create SBOMs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#scan-for-vulnerabilities"},"Scan for Vulnerabilities")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#docker-hub-account"},"Docker Hub Account")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#clean-up-unused-resources"},"Clean Up Unused Resources"))),(0,o.kt)("h2",{id:"general-commands"},"General Commands"),(0,o.kt)("p",null,"First up, here are some basics to get you started:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker version")," \u2013 Displays detailed information about your Docker CLI and daemon versions."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker system info")," \u2013 Lists data about your Docker environment, including active plugins and the number of containers and images on your system."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker help")," \u2013 View the help index, a reference of all the supported commands."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker <command> --help")," \u2013 View the help information about a particular command, including detailed information on the supported option flags."),(0,o.kt)("h2",{id:"build-images"},"Build Images"),(0,o.kt)("p",null,"These commands relate to building new images from Dockerfiles:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker build .")," \u2013 Build the Dockerfile in your working directory into a new image."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker build -t example-image:latest .")," \u2013 Build the Dockerfile in your working directory and tag the resulting image as ",(0,o.kt)("inlineCode",{parentName:"p"},"example-image:latest.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker build -f docker/app-dockerfile")," \u2013 Build the Dockerfile at the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker/app-dockerfile")," path."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker build --build-arg foo=bar .")," \u2013 Build an image and set the ",(0,o.kt)("inlineCode",{parentName:"p"},"foo")," build argument to the value bar."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker build --pull .")," \u2013 Instructs Docker to pull updated versions of the images referenced in FROM instructions in your Dockerfile, before building your new image."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker build --quiet ."),"  \u2013 Build an image without emitting any output during the build. The image ID will still be emitted to the terminal when the build completes."),(0,o.kt)("h2",{id:"run-containers"},"Run Containers"),(0,o.kt)("p",null,"After building an image, use these commands to run containers:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run example-image:latest")," \u2013 Run a new container using the ",(0,o.kt)("inlineCode",{parentName:"p"},"example-image:latest")," image. The output from the container\u2019s foreground process will be shown in your terminal."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run example-image:latest demo-command")," \u2013 Supplying an argument after the image name sets the command to run inside the container; it will be appended to the image\u2019s entrypoint. (It\u2019s possible to override the entrypoint with the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command\u2019s ",(0,o.kt)("inlineCode",{parentName:"p"},"--entrypoint")," flag.)"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --rm example-image:latest")," \u2013 The   ",(0,o.kt)("inlineCode",{parentName:"p"},"--rm")," flag instructs Docker to automatically remove the container when it exits instead of allowing it to remain as a stopped container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run -d example-image:latest")," \u2013 Detaches your terminal from the running container, leaving the container in the background."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run -it example-image:latest")," \u2013 Attaches your terminal\u2019s input stream and a TTY to the container. Use this command to run interactive commands inside the container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --name my-container example-image:latest")," \u2013 Names the new container ",(0,o.kt)("inlineCode",{parentName:"p"},"my-container"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --hostname my-container example-image:latest")," \u2013 Set the container\u2019s hostname to a specific value (it defaults to the container\u2019s name)."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --env foo=bar example-image:latest")," \u2013 Set the value of the ",(0,o.kt)("inlineCode",{parentName:"p"},"foo")," environment variable inside the container to ",(0,o.kt)("inlineCode",{parentName:"p"},"bar"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --env-file config.env example-image:latest")," \u2013 Populate environment variables inside the container from the file config.env. The file should contain key-value pairs in the format ",(0,o.kt)("inlineCode",{parentName:"p"},"foo=bar"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run -p 8080:80 example-image:latest")," \u2013 Bind ",(0,o.kt)("inlineCode",{parentName:"p"},"port 8080")," on your Docker host to ",(0,o.kt)("inlineCode",{parentName:"p"},"port 80")," inside the container. It allows you to visit ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:8080")," to access the network service listening on ",(0,o.kt)("inlineCode",{parentName:"p"},"port 80")," inside the container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run -v /host-directory:/container-directory example-image:latest")," \u2013 Bind mount ",(0,o.kt)("inlineCode",{parentName:"p"},"/host-directory")," on your host to ",(0,o.kt)("inlineCode",{parentName:"p"},"/container-directory")," inside the container. The directory\u2019s contents will be visible on both sides of the mount."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run -v data:/data example-image:latest")," \u2013 Mount the named Docker volume called ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"/data")," inside the container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --network my-network example-image:latest")," \u2013 Connect the new container to the Docker network called ",(0,o.kt)("inlineCode",{parentName:"p"},"my-network"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --restart unless-stopped example-image:latest")," \u2013 Set the container to start automatically when the Docker daemon starts, unless the container has been manually stopped. Other restart policies are also supported."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker run --privileged example-image:latest")," \u2013 Run the container with privileged access to the host system. This should usually be disabled to maintain security."),(0,o.kt)("h2",{id:"manage-containers"},"Manage Containers"),(0,o.kt)("p",null,"After you\u2019ve started some containers, you can use the following set of commands to manage them:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker ps")," \u2013 List all the containers currently running on your host."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker ps -a")," \u2013 List every container on your host, including stopped ones."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker attach <container>")," \u2013 Attach your terminal to the foreground process of the container with the ",(0,o.kt)("inlineCode",{parentName:"p"},"ID")," or name ",(0,o.kt)("inlineCode",{parentName:"p"},"<container>"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker commit <container> new-image:latest")," \u2013 Save the current state of ",(0,o.kt)("inlineCode",{parentName:"p"},"<container>")," to a new image called new-image:latest."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker inspect <container>")," \u2013 Obtain all the information Docker holds about a container, in JSON format."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker kill <container>")," \u2013 Send a SIGKILL signal to the foreground process running in a container, to force it to stop."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker rename <container> my-container")," \u2013 Rename a specified container to ",(0,o.kt)("inlineCode",{parentName:"p"},"my-container"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker pause <container>")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"docker unpause <container>")," \u2013 Pause and unpause the processes running within a specific container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker stop <container>")," \u2013 Stop a running container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker start <container>")," \u2013 Start a previously stopped container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker rm <container>")," \u2013 Delete a container by its ID or name. Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"-f")," (force) flag to delete a container that\u2019s currently running."),(0,o.kt)("h2",{id:"copy-to-and-from-containers"},"Copy to and From Containers"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"docker cp")," command facilitates bi-directional copying between containers and your host machine:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker cp example.txt my-container:/data")," \u2013 Copy ",(0,o.kt)("inlineCode",{parentName:"p"},"example.txt")," from your host to ",(0,o.kt)("inlineCode",{parentName:"p"},"/data")," inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"my-container")," container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker cp my-container:/data/example.txt /demo/example.txt")," \u2013 Copy ",(0,o.kt)("inlineCode",{parentName:"p"},"/data/example.txt")," out of the ",(0,o.kt)("inlineCode",{parentName:"p"},"my-container")," container, to ",(0,o.kt)("inlineCode",{parentName:"p"},"/demo/example.txt")," on your host."),(0,o.kt)("p",null,"If you need to move files or folders between two containers, you should copy from the first container to your host, then onwards into the second container."),(0,o.kt)("h2",{id:"execute-commands-in-containers"},"Execute Commands in Containers"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"docker exec")," command allows you to run a new process inside a currently running container:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker exec my-container demo-command"),"\u2013 Run ",(0,o.kt)("inlineCode",{parentName:"p"},"demo-command")," inside ",(0,o.kt)("inlineCode",{parentName:"p"},"my-container"),"; the process\u2019 output will be shown in your terminal"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker exec -it my-container demo-command")," \u2013 Run a command interactively by attaching your terminal\u2019s input stream and a pseudo-TTY."),(0,o.kt)("h2",{id:"access-container-logs"},"Access Container Logs"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker logs <container>")," \u2013 This command streams the existing log output from a container into your terminal window, then exits."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker logs <container> --follow")," \u2013 This variation emits all existing logs, then continues to stream new logs into your terminal as they\u2019re stored."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker logs <container> -n 10")," \u2013 Get the last 10 logs from a container."),(0,o.kt)("p",null,"Logs are collated from the standard output and error streams emitted by the container\u2019s foreground process."),(0,o.kt)("h2",{id:"view-container-resource-utilization"},"View Container Resource Utilization"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker stats <container>")," \u2013 Stream a container\u2019s resource utilization information into your terminal. The output includes CPU, memory, and I/O usage, as well as the number of processes running within the container."),(0,o.kt)("h2",{id:"manage-images"},"Manage Images"),(0,o.kt)("p",null,"The following commands interact with images stored on your Docker host:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker images")," \u2013 List all stored images."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker rmi <image>")," \u2013 Delete an image by its ID or tag. Deletion of images which have multiple tags must be forced using the -f flag."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker tag <image> example-image:latest")," \u2013 Add a new tag (",(0,o.kt)("inlineCode",{parentName:"p"},"example-image:latest"),") to an existing image (",(0,o.kt)("inlineCode",{parentName:"p"},"<image>"),")."),(0,o.kt)("h2",{id:"pull-and-push-images"},"Pull and Push Images"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker push example.com/user/image:latest")," \u2013 Push an image from your Docker host to a remote registry. The image is identified by its tag, which must reference the registry you\u2019re pushing to."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker pull example.com/user/image:latest")," \u2013 Manually pull an image from a remote registry to make it available on your host."),(0,o.kt)("p",null,"When the image\u2019s tag omits a registry URL, the Docker Hub registry will be used as the default."),(0,o.kt)("h2",{id:"manage-networks"},"Manage Networks"),(0,o.kt)("p",null,"These commands administer the Docker networks on your host:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker create network my-network")," \u2013 Create a new network called ",(0,o.kt)("inlineCode",{parentName:"p"},"my-network"),"; it will default to using the bridge driver."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker create network my-network -d host")," \u2013 Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"-d")," flag to select an alternative driver, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"host"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker network connect <network> <container>")," \u2013 Connect a container to an existing network."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker network disconnect <network> <container>")," \u2013 Remove a container from a network it\u2019s currently connected to."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker network ls")," \u2013 List all the Docker networks available on your host, including built-in networks such as ",(0,o.kt)("inlineCode",{parentName:"p"},"bridge")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"host"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker network rm <network>")," \u2013 Delete a network by its ID or name. This is only possible when there are no containers currently connected to the network."),(0,o.kt)("h2",{id:"manage-volumes"},"Manage Volumes"),(0,o.kt)("p",null,"The following commands relate to the management of storage volumes:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker volume create my-volume")," \u2013 Create a new named volume called ",(0,o.kt)("inlineCode",{parentName:"p"},"my-volume"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker volume ls")," \u2013 List the volumes present on your host."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker volume rm")," \u2013 Delete a volume, which will destroy the data within it. The volume must not be used by any container."),(0,o.kt)("h2",{id:"use-configuration-contexts"},"Use Configuration Contexts"),(0,o.kt)("p",null,"Configuration contexts allow you to connect to multiple Docker daemon instances from a single installation of the Docker CLI."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker context create my-context --host=tcp://host:2376,ca=~/ca-file,cert=~/cert-file,key=~/key-file")," \u2013 Create a new context called my-context to connect to a specified Docker host."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker context update <context>")," \u2013 Modify the configuration of a named context; the command accepts the same arguments as ",(0,o.kt)("inlineCode",{parentName:"p"},"docker context create"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker context ls")," \u2013 List the contexts available in your Docker config file."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker context use <context>")," \u2013 Switch to a named context. Subsequent ",(0,o.kt)("inlineCode",{parentName:"p"},"docker")," commands will be executed against the Docker host configured in the newly selected context."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker context rm <context>")," \u2013 Delete a context by its name."),(0,o.kt)("h2",{id:"create-sboms"},"Create SBOMs"),(0,o.kt)("p",null,"Docker now has integrated SBOM generation capabilities. SBOMs are indexes of the packages included in your container images."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker sbom example-image:latest")," \u2013 Produce an SBOM for the image tagged ",(0,o.kt)("inlineCode",{parentName:"p"},"example-image:latest"),". The SBOM will be shown in your terminal."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker sbom example-image:latest --output sbom.txt")," \u2013 Produce an SBOM and save it to ",(0,o.kt)("inlineCode",{parentName:"p"},"sbom.txt"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker sbom example-image:latest --format spdx-json")," \u2013 Produce an SBOM in a standard machine-parseable format, such as SPDX (",(0,o.kt)("inlineCode",{parentName:"p"},"spdx-json"),"), CycloneDX (",(0,o.kt)("inlineCode",{parentName:"p"},"cyclonedx-json"),"), or Syft JSON (",(0,o.kt)("inlineCode",{parentName:"p"},"syft-json"),")."),(0,o.kt)("h2",{id:"scan-for-vulnerabilities"},"Scan for Vulnerabilities"),(0,o.kt)("p",null,"Docker also has a built-in image vulnerability scanner that\u2019s powered by Snyk:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker scan example-image:latest")," \u2013 Scan for vulnerabilities in the image tagged ",(0,o.kt)("inlineCode",{parentName:"p"},"example-image:latest"),". The results will be shown in your terminal."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker scan example-image:latest --file Dockerfile")," \u2013 The ",(0,o.kt)("inlineCode",{parentName:"p"},"--file")," argument supplies the path to the Dockerfile that was used to build the image. When the Dockerfile is available, more detailed vulnerability information is produced."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker scan example-image:latest --severity high")," \u2013 Only report vulnerabilities that are ",(0,o.kt)("inlineCode",{parentName:"p"},"high")," severity or higher. The ",(0,o.kt)("inlineCode",{parentName:"p"},"--severity")," flag also supports ",(0,o.kt)("inlineCode",{parentName:"p"},"low")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"medium")," values."),(0,o.kt)("h2",{id:"docker-hub-account"},"Docker Hub Account"),(0,o.kt)("p",null,"These commands interact with your Docker Hub account:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker login")," \u2013 Login to your account. You\u2019ll be prompted to supply credentials interactively. You must login before you can push images. Logging in also helps you avoid hitting public pull rate limits."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker logout")," \u2013 Logs you out of your account."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker search nginx")," \u2013 Searches Docker Hub for images matching the supplied search term (nginx, in this example)."),(0,o.kt)("h2",{id:"clean-up-unused-resources"},"Clean Up Unused Resources"),(0,o.kt)("p",null,"It\u2019s normal for a regularly used Docker installation to accumulate a large number of resources, many of which become redundant as you create replacements. These commands will clean up your environment:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker images -f dangling=true")," - list all dangling images."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'docker images --no-trunc -aqf "dangling=true" | xargs docker rmi')," - remove all dangling images."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker system prune")," \u2013 Removes unused data, including dangling image layers (images with no tags)."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker system prune -a")," \u2013 Extends the prune process by deleting all unused images, instead of only dangling ones."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker system prune --volumes")," \u2013 Includes volume data in the prune process. This will delete any volumes that aren\u2019t used by a container."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker image prune")," \u2013 Removes dangling images, without affecting any other types of data."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker image prune -a")," \u2013 Removes all unused images."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker network prune")," \u2013 Removes unused networks."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker volume prune")," \u2013 Removes unused volumes."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"docker system df")," \u2013 Reports your Docker installation\u2019s total disk usage."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"prune")," commands will prompt you to confirm your intentions before any resources are deleted. You can disable the prompt by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"-f")," (force) flag."))}u.isMDXComponent=!0}}]);